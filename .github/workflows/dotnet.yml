name: Build

env:
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  ASPNETCORE_ENVIRONMENT: github
  BUILD_PATH: "${{github.workspace}}/artifacts"
  COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

on:
  push:
    branches:
      - master
      - develop
    tags:
      - "v*"
  pull_request:
    branches:
      - master
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          MSSQL_SA_PASSWORD: "!P@ssw0rd"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        volumes:
          - mssql_data:/var/opt/mssql

      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: "!P@ssw0rd"
        ports:
          - 5432:5432
        volumes:
          - postgres_data:/var/lib/postgresql/data

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.0.x
            7.0.x

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Solution
        run: dotnet build --no-restore --configuration Release

      - name: Run Test
        run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage" --settings coverlet.runsettings

      - name: Report Coverage
        if: success()
        uses: coverallsapp/github-action@v2
        with:
          file: "${{github.workspace}}/test/*/TestResults/*/coverage.info"
          format: lcov

      - name: Create Packages
        if: success() && github.event_name != 'pull_request'
        run: dotnet pack --configuration Release --include-symbols --include-source --no-build --output "${{env.BUILD_PATH}}"

      - name: Upload Packages
        if: success() && github.event_name != 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: "${{env.BUILD_PATH}}"

      - name: Install docfx
        if: success() && github.event_name != 'pull_request' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))
        run: dotnet tool update -g docfx

      - name: Create Documentation
        if: success() && github.event_name != 'pull_request' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))
        run: docfx docs/docfx.json

      - name: Upload Documentation
        uses: actions/upload-pages-artifact@v2
        with:
          name: github-pages
          path: "docs/_site/"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: success() && github.event_name != 'pull_request' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: packages

      - name: Publish Packages GitHub
        run: |
          for package in $(find -name "*.nupkg"); do
            echo "${0##*/}": Pushing $package...
            dotnet nuget push $package --source https://nuget.pkg.github.com/loresoft/index.json --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
          done

      - name: Publish Packages feedz
        run: |
          for package in $(find -name "*.nupkg"); do
            echo "${0##*/}": Pushing $package...
            dotnet nuget push $package --source https://f.feedz.io/loresoft/open/nuget/index.json --api-key ${{ secrets.FEEDDZ_KEY }} --skip-duplicate
          done

      - name: Publish Packages Nuget
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          for package in $(find -name "*.nupkg"); do
            echo "${0##*/}": Pushing $package...
            dotnet nuget push $package --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_KEY }} --skip-duplicate
          done

  pages:
    runs-on: ubuntu-latest
    needs: build
    if: success() && github.event_name != 'pull_request' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))

    permissions:
      pages: write
      id-token: write

    steps:
      - name: Deploy Documentation
        id: deployment
        uses: actions/deploy-pages@v2

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
